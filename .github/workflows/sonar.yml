name: SonarCloud CI & Security Report

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  sonarcloud:
    name: SonarCloud Scan and Generate Report
    runs-on: ubuntu-latest

    steps:
      # 1. ดึงโค้ดจาก GitHub
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # ต้องเป็น 0 เพื่อให้ SonarCloud อ่าน commit history ได้ถูกต้อง

      # 2. รันการสแกนด้วย SonarCloud
      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v6
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          args: >
            -Dsonar.organization=nittayajp31-create
            -Dsonar.projectKey=devjp31_sample-app
            -Dsonar.host.url=https://sonarcloud.io

      # 3. ตรวจสอบสถานะ Quality Gate จาก SonarCloud API
      - name: Check Quality Gate status
        id: qualitygate
        run: |
          echo "Checking SonarCloud Quality Gate status..."
          response=$(curl -s -u "${{ secrets.SONAR_TOKEN }}:" \
            "https://sonarcloud.io/api/qualitygates/project_status?projectKey=devjp31_sample-app")

          echo "Response: $response"
          status=$(echo $response | jq -r '.projectStatus.status')

          echo "Quality Gate Status: $status"
          echo "status=$status" >> $GITHUB_ENV  # ใช้ env.status ต่อ

      # 4. สร้างรายงาน PDF เมื่อผลสแกน “ผ่าน”
      - name: Generate PDF Report
        run: |
          echo "Generating Final SonarCloud PDF Report (Always Generate)..."
          pip install reportlab requests beautifulsoup4 pytz
          python <<EOF
          import os
          import pytz
          import requests
          from datetime import datetime
          from bs4 import BeautifulSoup
          from reportlab.lib.pagesizes import A4
          from reportlab.pdfgen import canvas
          from reportlab.lib import colors
          from reportlab.platypus import Table, TableStyle, Paragraph
          from reportlab.lib.styles import getSampleStyleSheet, ParagraphStyle
          from reportlab.lib.enums import TA_LEFT

          TOKEN = "${{ secrets.SONAR_TOKEN }}"
          PROJECT_KEY = "devjp31_sample-app"
          HOST = "https://sonarcloud.io"
          output_path = os.path.join(os.getenv("GITHUB_WORKSPACE", "."), "Sonar_Report.pdf")

          # === เวลาไทย (Bangkok) ===
          bangkok_tz = pytz.timezone("Asia/Bangkok")
          local_time = datetime.now(bangkok_tz).strftime("%Y-%m-%d %H:%M %Z")

          # === ตรวจสอบสถานะ Quality Gate จาก API ===
          try:
              qg_api = f"{HOST}/api/qualitygates/project_status?projectKey={PROJECT_KEY}"
              qg_response = requests.get(qg_api, auth=(TOKEN, "")).json()
              quality_status = qg_response.get("projectStatus", {}).get("status", "UNKNOWN")
          except Exception as e:
              quality_status = f"ERROR ({e})"

          # === ดึงข้อมูลจาก SonarCloud ===
          metrics_url = f"{HOST}/api/measures/component?component={PROJECT_KEY}&metricKeys=bugs,vulnerabilities,code_smells,coverage,duplicated_lines_density"
          issues_url = f"{HOST}/api/issues/search?componentKeys={PROJECT_KEY}&statuses=OPEN,CONFIRMED,REOPENED&ps=500"

          try:
              metrics = requests.get(metrics_url, auth=(TOKEN, "")).json()
              issues = requests.get(issues_url, auth=(TOKEN, "")).json().get("issues", [])
              m = {item["metric"]: item["value"] for item in metrics["component"]["measures"]}
          except Exception as e:
              issues = []
              m = {}
              m["error"] = str(e)

          total_issues = len(issues)
          coverage = m.get("coverage", "N/A")

          # === นับจำนวนตาม Severity ===
          sev_levels = ["BLOCKER", "CRITICAL", "MAJOR", "MINOR", "INFO"]
          sev_count = {s: 0 for s in sev_levels}
          for i in issues:
              sev = i.get("severity", "INFO").upper()
              if sev in sev_count:
                  sev_count[sev] += 1

          # === เริ่มสร้าง PDF ===
          c = canvas.Canvas(output_path, pagesize=A4)
          width, height = A4
          y = height - 70

          # === Header ===
          c.setFont("Helvetica-Bold", 16)
          c.setFillColor(colors.black)
          c.drawString(70, y, "SonarCloud Security & Code Quality Report")
          y -= 25
          c.setFont("Helvetica", 11)
          c.drawString(70, y, f"Project: {PROJECT_KEY}")
          y -= 14
          c.drawString(70, y, f"Host: {HOST}")
          y -= 14
          c.drawString(70, y, f"Date: {local_time}")
          y -= 18

          # === Summary Info ===
          c.setFont("Helvetica-Bold", 11)
          c.drawString(70, y, f"Total Issues: {total_issues}")
          y -= 14
          c.drawString(70, y, f"Coverage: {coverage}%")
          y -= 18

          # === Quality Gate (สีขึ้นอยู่กับสถานะ) ===
          c.setFont("Helvetica-Bold", 11)
          c.drawString(70, y, "Quality Gate: ")
          if quality_status == "OK":
              c.setFillColor(colors.green)
          elif quality_status in ["WARN", "ERROR"]:
              c.setFillColor(colors.red)
          else:
              c.setFillColor(colors.orange)
          c.drawString(150, y, quality_status)
          c.setFillColor(colors.black)
          y -= 25
          c.line(70, y, width - 70, y)
          y -= 25

          # === ถ้าเกิด error ตอนดึงข้อมูล ให้แสดงข้อความในรายงานเลย ===
          if "error" in m:
              c.setFont("Helvetica", 10)
              c.setFillColor(colors.red)
              c.drawString(70, y, f"Data fetch failed: {m['error']}")
              c.save()
              exit()

          # (ส่วนต่อไปคงเดิมกับเวอร์ชันก่อนหน้า)
          # >>> Summary Metrics / Table / Detailed Issues (same as your current version)
          EOF


      # 5. อัปโหลด PDF เป็น Artifact
      - name: Upload PDF Report
        if: env.status == 'OK'
        uses: actions/upload-artifact@v4
        with:
          name: sonarcloud-report
          path: ${{ github.workspace }}/Sonar_Report.pdf

      # 6. แจ้งเตือนเมื่อไม่ผ่าน
      - name: Fail if Quality Gate failed
        if: env.status != 'OK'
        run: |
          echo "SonarCloud Quality Gate failed. Please review the issues in SonarCloud dashboard."
          exit 1
